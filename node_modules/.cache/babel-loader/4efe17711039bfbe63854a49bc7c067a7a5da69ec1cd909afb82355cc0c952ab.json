{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Msi\\\\praktika1\\\\src\\\\components\\\\fastfild.js\";\nimport React from 'react';\nimport { Formik, Field, FastField, Form } from 'formik';\nimport * as Yup from 'yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Basic = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"Sign Up\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: {\n      firstName: '',\n      lastName: '',\n      email: ''\n    },\n    validationSchema: Yup.object().shape({\n      firstName: Yup.string().required(),\n      middleInitial: Yup.string(),\n      lastName: Yup.string().required(),\n      email: Yup.string().email().required()\n    }),\n    onSubmit: values => {\n      setTimeout(() => {\n        alert(JSON.stringify(values, null, 2));\n      }, 500);\n    },\n    render: formikProps => /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"firstName\",\n        children: \"First Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(FastField, {\n        name: \"firstName\",\n        placeholder: \"Weezy\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this), form.touched.firstName && form.errors.firstName && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: form.errors.firstName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"middleInitial\",\n        children: \"Middle Initial\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(FastField, {\n        name: \"middleInitial\",\n        placeholder: \"F\",\n        children: _ref => {\n          let {\n            field,\n            form,\n            meta\n          } = _ref;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              ...field\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 17\n            }, this), meta.touched ? meta.error : null, form.touched.firstName && form.errors.firstName ? form.errors.firstName : null, form.submitCount, /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: form.setFieldValue('middleInitial', 'J'),\n              children: \"J\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 15\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"lastName\",\n        children: \"LastName\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        name: \"lastName\",\n        placeholder: \"Baby\",\n        children: () => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            ...field\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 17\n          }, this), form.touched.firstName && form.errors.firstName ? form.errors.firstName : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        name: \"email\",\n        placeholder: \"jane@acme.com\",\n        type: \"email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 6,\n  columnNumber: 3\n}, this);\n_c = Basic;\nexport default Basic;\nvar _c;\n$RefreshReg$(_c, \"Basic\");","map":{"version":3,"names":["React","Formik","Field","FastField","Form","Yup","Basic","firstName","lastName","email","object","shape","string","required","middleInitial","values","setTimeout","alert","JSON","stringify","formikProps","form","touched","errors","field","meta","error","submitCount","setFieldValue"],"sources":["C:/Users/Msi/praktika1/src/components/fastfild.js"],"sourcesContent":["import React from 'react';\r\nimport { Formik, Field, FastField, Form } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nconst Basic = () => (\r\n  <div>\r\n    <h1>Sign Up</h1>\r\n    <Formik\r\n      initialValues={{\r\n        firstName: '',\r\n        lastName: '',\r\n        email: '',\r\n      }}\r\n      validationSchema={Yup.object().shape({\r\n        firstName: Yup.string().required(),\r\n        middleInitial: Yup.string(),\r\n        lastName: Yup.string().required(),\r\n        email: Yup.string().email().required(),\r\n      })}\r\n      onSubmit={values => {\r\n        setTimeout(() => {\r\n          alert(JSON.stringify(values, null, 2));\r\n        }, 500);\r\n      }}\r\n      render={formikProps => (\r\n        <Form>\r\n          {/** This <FastField> only updates for changes made to\r\n           values.firstName, touched.firstName, errors.firstName */}\r\n          <label htmlFor=\"firstName\">First Name</label>\r\n          <FastField name=\"firstName\" placeholder=\"Weezy\" />\r\n\r\n          {/** Updates for all changes because it's from the\r\n           top-level formikProps which get all updates */}\r\n          {form.touched.firstName && form.errors.firstName && (\r\n            <div>{form.errors.firstName}</div>\r\n          )}\r\n\r\n          <label htmlFor=\"middleInitial\">Middle Initial</label>\r\n          <FastField name=\"middleInitial\" placeholder=\"F\">\r\n            {({ field, form, meta }) => (\r\n              <div>\r\n                <input {...field} />\r\n                {/**\r\n                 * This updates normally because it's from the same slice of Formik state,\r\n                 * i.e. path to the object matches the name of this <FastField />\r\n                 */}\r\n                {meta.touched ? meta.error : null}\r\n\r\n                {/** This won't ever update since it's coming from\r\n                 from another <Field>/<FastField>'s (i.e. firstName's) slice   */}\r\n                {form.touched.firstName && form.errors.firstName\r\n                  ? form.errors.firstName\r\n                  : null}\r\n\r\n                {/* This doesn't update either */}\r\n                {form.submitCount}\r\n\r\n                {/* Imperative methods still work as expected */}\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={form.setFieldValue('middleInitial', 'J')}\r\n                >\r\n                  J\r\n                </button>\r\n              </div>\r\n            )}\r\n          </FastField>\r\n\r\n          {/** Updates for all changes to Formik state\r\n           and all changes by all <Field>s and <FastField>s */}\r\n          <label htmlFor=\"lastName\">LastName</label>\r\n          <Field name=\"lastName\" placeholder=\"Baby\">\r\n            {() => (\r\n              <div>\r\n                <input {...field} />\r\n                {/**  Works because this is inside\r\n                 of a <Field/>, which gets all updates */}\r\n                {form.touched.firstName && form.errors.firstName\r\n                  ? form.errors.firstName\r\n                  : null}\r\n              </div>\r\n            )}\r\n          </Field>\r\n\r\n          {/** Updates for all changes to Formik state and\r\n           all changes by all <Field>s and <FastField>s */}\r\n          <label htmlFor=\"email\">Email</label>\r\n          <Field name=\"email\" placeholder=\"jane@acme.com\" type=\"email\" />\r\n\r\n          <button type=\"submit\">Submit</button>\r\n        </Form>\r\n      )}\r\n    />\r\n  </div>\r\n);\r\n\r\nexport default Basic"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}