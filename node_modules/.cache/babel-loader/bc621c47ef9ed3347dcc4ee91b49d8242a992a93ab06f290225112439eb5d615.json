{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Msi\\\\praktika1\\\\src\\\\pages\\\\About.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction About() {\n  _s();\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    const apiUrl = \"http://api.tvmaze.com/search/shows?q=golden%20girls\";\n    fetch(apiUrl).then(response => response.json()).then(data => setData(data.product.nutriments)).catch(error => {\n      console.error(error);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      style: {\n        width: \"18rem\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n        variant: \"top\",\n        src: data.image,\n        alt: \"images\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n          children: \"Card Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n        className: \"list-group-flush\",\n        children: [/*#__PURE__*/_jsxDEV(ListGroup.Item, {\n          children: [\" \", \"Energy\", data.energy_value, \" \", data.energy_unit]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n          children: [\"Protein\", data.proteins_value, \" \", data.proteins_unit]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n          children: [\" \", \"Carbohydrates: \", data.carbohydrates_value, \" \", data.carbohydrates_unit]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n          children: [\" \", \"Fat:\", data.fat_value, \" \", data.fat_unit, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Link, {\n          href: \"#\",\n          children: \"Card Link\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card.Link, {\n          href: \"#\",\n          children: \"Another Link\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n_s(About, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n_c = About;\nexport default About;\nvar _c;\n$RefreshReg$(_c, \"About\");","map":{"version":3,"names":["React","useState","useEffect","Card","ListGroup","About","data","setData","apiUrl","fetch","then","response","json","product","nutriments","catch","error","console","width","image","energy_value","energy_unit","proteins_value","proteins_unit","carbohydrates_value","carbohydrates_unit","fat_value","fat_unit"],"sources":["C:/Users/Msi/praktika1/src/pages/About.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport ListGroup from \"react-bootstrap/ListGroup\";\r\n\r\nfunction About() {\r\n  const [data, setData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const apiUrl =\r\n      \"http://api.tvmaze.com/search/shows?q=golden%20girls\";\r\n\r\n    fetch(apiUrl)\r\n      .then((response) => response.json())\r\n      .then((data) => setData(data.product.nutriments))\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <Card style={{ width: \"18rem\" }}>\r\n        <Card.Img\r\n          variant=\"top\"\r\n          src={\r\n            data.image\r\n          }\r\n          alt=\"images\"\r\n        />\r\n\r\n        <Card.Body>\r\n          <Card.Title>Card Title</Card.Title>\r\n          <Card.Text></Card.Text>\r\n        </Card.Body>\r\n        <ListGroup className=\"list-group-flush\">\r\n          <ListGroup.Item>\r\n            {\" \"}\r\n            Energy{data.energy_value} {data.energy_unit}\r\n          </ListGroup.Item>\r\n          <ListGroup.Item>\r\n            Protein{data.proteins_value} {data.proteins_unit}\r\n          </ListGroup.Item>\r\n          <ListGroup.Item>\r\n            {\" \"}\r\n            Carbohydrates: {data.carbohydrates_value} {data.carbohydrates_unit}\r\n          </ListGroup.Item>\r\n          <ListGroup.Item>\r\n            {\" \"}\r\n            Fat:{data.fat_value} {data.fat_unit}{\" \"}\r\n          </ListGroup.Item>\r\n        </ListGroup>\r\n        <Card.Body>\r\n          <Card.Link href=\"#\">Card Link</Card.Link>\r\n          <Card.Link href=\"#\">Another Link</Card.Link>\r\n        </Card.Body>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default About;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,IAAI,MAAM,sBAAsB;AACvC,OAAOC,SAAS,MAAM,2BAA2B;AAAC;AAElD,SAASC,KAAK,GAAG;EAAA;EACf,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAEpCC,SAAS,CAAC,MAAM;IACd,MAAMM,MAAM,GACV,qDAAqD;IAEvDC,KAAK,CAACD,MAAM,CAAC,CACVE,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACnCF,IAAI,CAAEJ,IAAI,IAAKC,OAAO,CAACD,IAAI,CAACO,OAAO,CAACC,UAAU,CAAC,CAAC,CAChDC,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACtB,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,oBACE;IAAA,uBACE,QAAC,IAAI;MAAC,KAAK,EAAE;QAAEE,KAAK,EAAE;MAAQ,CAAE;MAAA,wBAC9B,QAAC,IAAI,CAAC,GAAG;QACP,OAAO,EAAC,KAAK;QACb,GAAG,EACDZ,IAAI,CAACa,KACN;QACD,GAAG,EAAC;MAAQ;QAAA;QAAA;QAAA;MAAA,QACZ,eAEF,QAAC,IAAI,CAAC,IAAI;QAAA,wBACR,QAAC,IAAI,CAAC,KAAK;UAAA,UAAC;QAAU;UAAA;UAAA;UAAA;QAAA,QAAa,eACnC,QAAC,IAAI,CAAC,IAAI;UAAA;UAAA;UAAA;QAAA,QAAa;MAAA;QAAA;QAAA;QAAA;MAAA,QACb,eACZ,QAAC,SAAS;QAAC,SAAS,EAAC,kBAAkB;QAAA,wBACrC,QAAC,SAAS,CAAC,IAAI;UAAA,WACZ,GAAG,EAAC,QACC,EAACb,IAAI,CAACc,YAAY,EAAC,GAAC,EAACd,IAAI,CAACe,WAAW;QAAA;UAAA;UAAA;UAAA;QAAA,QAC5B,eACjB,QAAC,SAAS,CAAC,IAAI;UAAA,WAAC,SACP,EAACf,IAAI,CAACgB,cAAc,EAAC,GAAC,EAAChB,IAAI,CAACiB,aAAa;QAAA;UAAA;UAAA;UAAA;QAAA,QACjC,eACjB,QAAC,SAAS,CAAC,IAAI;UAAA,WACZ,GAAG,EAAC,iBACU,EAACjB,IAAI,CAACkB,mBAAmB,EAAC,GAAC,EAAClB,IAAI,CAACmB,kBAAkB;QAAA;UAAA;UAAA;UAAA;QAAA,QACnD,eACjB,QAAC,SAAS,CAAC,IAAI;UAAA,WACZ,GAAG,EAAC,MACD,EAACnB,IAAI,CAACoB,SAAS,EAAC,GAAC,EAACpB,IAAI,CAACqB,QAAQ,EAAE,GAAG;QAAA;UAAA;UAAA;UAAA;QAAA,QACzB;MAAA;QAAA;QAAA;QAAA;MAAA,QACP,eACZ,QAAC,IAAI,CAAC,IAAI;QAAA,wBACR,QAAC,IAAI,CAAC,IAAI;UAAC,IAAI,EAAC,GAAG;UAAA,UAAC;QAAS;UAAA;UAAA;UAAA;QAAA,QAAY,eACzC,QAAC,IAAI,CAAC,IAAI;UAAC,IAAI,EAAC,GAAG;UAAA,UAAC;QAAY;UAAA;UAAA;UAAA;QAAA,QAAY;MAAA;QAAA;QAAA;QAAA;MAAA,QAClC;IAAA;MAAA;MAAA;MAAA;IAAA;EACP;IAAA;IAAA;IAAA;EAAA,QACH;AAEV;AAAC,GAtDQtB,KAAK;AAAA,KAALA,KAAK;AAwDd,eAAeA,KAAK;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}