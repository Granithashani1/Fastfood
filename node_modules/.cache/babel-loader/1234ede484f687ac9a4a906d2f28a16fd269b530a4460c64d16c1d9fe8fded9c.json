{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Msi\\\\praktika1\\\\src\\\\components\\\\test.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Offcanvas from 'react-bootstrap/Offcanvas';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst options = [{\n  name: 'Read More',\n  scroll: true,\n  backdrop: true\n}];\nfunction OffCanvasExample(_ref) {\n  _s();\n  let {\n    name,\n    ...props\n  } = _ref;\n  const [show, setShow] = useState(true);\n  const handleClose = () => setShow(true);\n  const toggleShow = () => setShow(s => !s);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"primary\",\n      onClick: toggleShow,\n      className: \"me-2\",\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Offcanvas, {\n      show: show,\n      onHide: handleClose,\n      ...props,\n      children: [/*#__PURE__*/_jsxDEV(Offcanvas.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Offcanvas.Title, {\n          children: \"Offcanvas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Offcanvas.Body, {\n        children: \"Some text as placeholder. In real life you can have the elements you have chosen. Like, text, images, lists, etc.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(OffCanvasExample, \"vfh/DqFDMxhJHyczn42K3OB7AlU=\");\n_c = OffCanvasExample;\nfunction Example() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: options.map((props, idx) => /*#__PURE__*/_jsxDEV(OffCanvasExample, {\n      ...props\n    }, idx, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this))\n  }, void 0, false);\n}\n_c2 = Example;\nexport default Example;\nvar _c, _c2;\n$RefreshReg$(_c, \"OffCanvasExample\");\n$RefreshReg$(_c2, \"Example\");","map":{"version":3,"names":["React","useState","Button","Offcanvas","options","name","scroll","backdrop","OffCanvasExample","props","show","setShow","handleClose","toggleShow","s","Example","map","idx"],"sources":["C:/Users/Msi/praktika1/src/components/test.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Offcanvas from 'react-bootstrap/Offcanvas';\r\n\r\nconst options = [\r\n\r\n\r\n  {\r\n    name: 'Read More',\r\n    scroll: true,\r\n    backdrop: true,\r\n  }\r\n\r\n];\r\n\r\nfunction OffCanvasExample({ name, ...props }) {\r\n  const [show, setShow] = useState(true);\r\n\r\n  const handleClose = () => setShow(true);\r\n  const toggleShow = () => setShow((s) => !s);\r\n\r\n  return (\r\n    <>\r\n      <Button variant=\"primary\" onClick={toggleShow} className=\"me-2\">\r\n        {name}\r\n      </Button>\r\n      <Offcanvas show={show} onHide={handleClose} {...props}>\r\n        <Offcanvas.Header closeButton>\r\n          <Offcanvas.Title>Offcanvas</Offcanvas.Title>\r\n        </Offcanvas.Header>\r\n        <Offcanvas.Body>\r\n          Some text as placeholder. In real life you can have the elements you\r\n          have chosen. Like, text, images, lists, etc.\r\n        </Offcanvas.Body>\r\n      </Offcanvas>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction Example() {\r\n  return (\r\n    <>\r\n      {options.map((props, idx) => (\r\n        <OffCanvasExample key={idx} {...props} />\r\n      ))}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Example;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,wBAAwB;AAC3C,OAAOC,SAAS,MAAM,2BAA2B;AAAC;AAAA;AAElD,MAAMC,OAAO,GAAG,CAGd;EACEC,IAAI,EAAE,WAAW;EACjBC,MAAM,EAAE,IAAI;EACZC,QAAQ,EAAE;AACZ,CAAC,CAEF;AAED,SAASC,gBAAgB,OAAqB;EAAA;EAAA,IAApB;IAAEH,IAAI;IAAE,GAAGI;EAAM,CAAC;EAC1C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAEtC,MAAMW,WAAW,GAAG,MAAMD,OAAO,CAAC,IAAI,CAAC;EACvC,MAAME,UAAU,GAAG,MAAMF,OAAO,CAAEG,CAAC,IAAK,CAACA,CAAC,CAAC;EAE3C,oBACE;IAAA,wBACE,QAAC,MAAM;MAAC,OAAO,EAAC,SAAS;MAAC,OAAO,EAAED,UAAW;MAAC,SAAS,EAAC,MAAM;MAAA,UAC5DR;IAAI;MAAA;MAAA;MAAA;IAAA,QACE,eACT,QAAC,SAAS;MAAC,IAAI,EAAEK,IAAK;MAAC,MAAM,EAAEE,WAAY;MAAA,GAAKH,KAAK;MAAA,wBACnD,QAAC,SAAS,CAAC,MAAM;QAAC,WAAW;QAAA,uBAC3B,QAAC,SAAS,CAAC,KAAK;UAAA,UAAC;QAAS;UAAA;UAAA;UAAA;QAAA;MAAkB;QAAA;QAAA;QAAA;MAAA,QAC3B,eACnB,QAAC,SAAS,CAAC,IAAI;QAAA,UAAC;MAGhB;QAAA;QAAA;QAAA;MAAA,QAAiB;IAAA;MAAA;MAAA;MAAA;IAAA,QACP;EAAA,gBACX;AAEP;AAAC,GAtBQD,gBAAgB;AAAA,KAAhBA,gBAAgB;AAwBzB,SAASO,OAAO,GAAG;EACjB,oBACE;IAAA,UACGX,OAAO,CAACY,GAAG,CAAC,CAACP,KAAK,EAAEQ,GAAG,kBACtB,QAAC,gBAAgB;MAAA,GAAeR;IAAK,GAAdQ,GAAG;MAAA;MAAA;MAAA;IAAA,QAC3B;EAAC,iBACD;AAEP;AAAC,MARQF,OAAO;AAUhB,eAAeA,OAAO;AAAC;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}