{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Msi\\\\praktika1\\\\src\\\\components\\\\LoginForm.js\";\nimport React from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport \"../img/Carouselstyle.css\";\nimport { Formik } from \"formik\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Loginform = () => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        email: \"\",\n        password: \"\"\n      },\n      validate: values => {\n        const errors = {};\n        if (!values.email) {\n          errors.email = \"Required\";\n        } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\n          errors.email = \"Invalid email address\";\n        }\n        return errors;\n      },\n      onSubmit: (values, _ref) => {\n        let {\n          setSubmitting\n        } = _ref;\n        setTimeout(() => {\n          alert(JSON.stringify(values, null, 2));\n          setSubmitting(false);\n        }, 400);\n      },\n      children: _ref2 => {\n        let {\n          values,\n          errors,\n          touched,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          isSubmitting\n          /* and other goodies */\n        } = _ref2;\n        return /*#__PURE__*/_jsxDEV(Container, {\n          className: \"loginform\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"https://t3.ftcdn.net/jpg/03/39/70/90/360_F_339709048_ZITR4wrVsOXCKdjHncdtabSNWpIhiaR7.jpg\",\n            alt: \"hello\",\n            className: \"img1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form, {\n            className: \"login\",\n            onSubmit: handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n              className: \"mb-3\",\n              controlId: \"formBasicEmail\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Email address\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"email\",\n                placeholder: \"Enter email\",\n                name: \"email\",\n                onChange: handleChange,\n                onBlur: handleBlur,\n                value: values.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 17\n              }, this), errors.email && touched.email, /*#__PURE__*/_jsxDEV(Form.Text, {\n                className: \"text-muted\",\n                children: \"We'll never share your email with anyone else.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              className: \"mb-3\",\n              controlId: \"formBasicPassword\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"password\",\n                placeholder: \"Password\",\n                name: \"password\",\n                onChange: handleChange,\n                onBlur: handleBlur,\n                value: values.password\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 17\n              }, this), errors.password && touched.password && errors.password]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              className: \"mb-3\",\n              controlId: \"formBasicCheckbox\",\n              children: /*#__PURE__*/_jsxDEV(Form.Check, {\n                type: \"checkbox\",\n                label: \"Remember\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              type: \"submit\",\n              disabled: isSubmitting,\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"require\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_c = Loginform;\nexport default Loginform;\nvar _c;\n$RefreshReg$(_c, \"Loginform\");","map":{"version":3,"names":["React","Container","Button","Form","Formik","Loginform","email","password","values","errors","test","setSubmitting","setTimeout","alert","JSON","stringify","touched","handleChange","handleBlur","handleSubmit","isSubmitting"],"sources":["C:/Users/Msi/praktika1/src/components/LoginForm.js"],"sourcesContent":["import React from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport {} from \"../img/Carouselstyle.css\";\r\nimport { Formik } from \"formik\";\r\n\r\nconst Loginform = () => {\r\n  return (\r\n    <>\r\n      <Formik\r\n        initialValues={{ email: \"\", password: \"\" }}\r\n        validate={(values) => {\r\n          const errors = {};\r\n          if (!values.email) {\r\n            errors.email = \"Required\";\r\n          } else if (\r\n            !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\r\n          ) {\r\n            errors.email = \"Invalid email address\";\r\n          }\r\n          return errors;\r\n        }}\r\n        onSubmit={(values, { setSubmitting }) => {\r\n          setTimeout(() => {\r\n            alert(JSON.stringify(values, null, 2));\r\n            setSubmitting(false);\r\n          }, 400);\r\n        }}\r\n      >\r\n        {({\r\n          values,\r\n          errors,\r\n          touched,\r\n          handleChange,\r\n          handleBlur,\r\n          handleSubmit,\r\n          isSubmitting,\r\n          /* and other goodies */\r\n        }) => (\r\n          <Container className=\"loginform\">\r\n            <img\r\n              src=\"https://t3.ftcdn.net/jpg/03/39/70/90/360_F_339709048_ZITR4wrVsOXCKdjHncdtabSNWpIhiaR7.jpg\"\r\n              alt=\"hello\"\r\n              className=\"img1\"\r\n            />\r\n            <Form className=\"login\" onSubmit={handleSubmit}>\r\n              <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                <Form.Label>Email address</Form.Label>\r\n                <Form.Control\r\n                  type=\"email\"\r\n                  placeholder=\"Enter email\"\r\n                  name=\"email\"\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  value={values.email}\r\n                />\r\n                {errors.email && touched.email}\r\n                <Form.Text className=\"text-muted\">\r\n                  We'll never share your email with anyone else.\r\n                </Form.Text>\r\n              </Form.Group>\r\n\r\n              <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n                <Form.Label>Password</Form.Label>\r\n                <Form.Control\r\n                  type=\"password\"\r\n                  placeholder=\"Password\"\r\n                  name=\"password\"\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  value={values.password}\r\n                />\r\n                {errors.password && touched.password && errors.password}\r\n              </Form.Group>\r\n              <Form.Group className=\"mb-3\" controlId=\"formBasicCheckbox\">\r\n                <Form.Check type=\"checkbox\" label=\"Remember\" />\r\n              </Form.Group>\r\n              <Button variant=\"primary\" type=\"submit\" disabled={isSubmitting}>\r\n                Submit\r\n              </Button>\r\n            </Form>\r\n          </Container>\r\n        )}\r\n      </Formik>\r\n      <require />\r\n\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Loginform;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,iBAAiB;AAC3C,OAAOC,MAAM,MAAM,wBAAwB;AAC3C,OAAOC,IAAI,MAAM,sBAAsB;AACvC,OAAe,0BAA0B;AACzC,SAASC,MAAM,QAAQ,QAAQ;AAAC;AAAA;AAEhC,MAAMC,SAAS,GAAG,MAAM;EACtB,oBACE;IAAA,wBACE,QAAC,MAAM;MACL,aAAa,EAAE;QAAEC,KAAK,EAAE,EAAE;QAAEC,QAAQ,EAAE;MAAG,CAAE;MAC3C,QAAQ,EAAGC,MAAM,IAAK;QACpB,MAAMC,MAAM,GAAG,CAAC,CAAC;QACjB,IAAI,CAACD,MAAM,CAACF,KAAK,EAAE;UACjBG,MAAM,CAACH,KAAK,GAAG,UAAU;QAC3B,CAAC,MAAM,IACL,CAAC,0CAA0C,CAACI,IAAI,CAACF,MAAM,CAACF,KAAK,CAAC,EAC9D;UACAG,MAAM,CAACH,KAAK,GAAG,uBAAuB;QACxC;QACA,OAAOG,MAAM;MACf,CAAE;MACF,QAAQ,EAAE,CAACD,MAAM,WAAwB;QAAA,IAAtB;UAAEG;QAAc,CAAC;QAClCC,UAAU,CAAC,MAAM;UACfC,KAAK,CAACC,IAAI,CAACC,SAAS,CAACP,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;UACtCG,aAAa,CAAC,KAAK,CAAC;QACtB,CAAC,EAAE,GAAG,CAAC;MACT,CAAE;MAAA,UAED;QAAA,IAAC;UACAH,MAAM;UACNC,MAAM;UACNO,OAAO;UACPC,YAAY;UACZC,UAAU;UACVC,YAAY;UACZC;UACA;QACF,CAAC;QAAA,oBACC,QAAC,SAAS;UAAC,SAAS,EAAC,WAAW;UAAA,wBAC9B;YACE,GAAG,EAAC,2FAA2F;YAC/F,GAAG,EAAC,OAAO;YACX,SAAS,EAAC;UAAM;YAAA;YAAA;YAAA;UAAA,QAChB,eACF,QAAC,IAAI;YAAC,SAAS,EAAC,OAAO;YAAC,QAAQ,EAAED,YAAa;YAAA,wBAC7C,QAAC,IAAI,CAAC,KAAK;cAAC,SAAS,EAAC,MAAM;cAAC,SAAS,EAAC,gBAAgB;cAAA,wBACrD,QAAC,IAAI,CAAC,KAAK;gBAAA,UAAC;cAAa;gBAAA;gBAAA;gBAAA;cAAA,QAAa,eACtC,QAAC,IAAI,CAAC,OAAO;gBACX,IAAI,EAAC,OAAO;gBACZ,WAAW,EAAC,aAAa;gBACzB,IAAI,EAAC,OAAO;gBACZ,QAAQ,EAAEF,YAAa;gBACvB,MAAM,EAAEC,UAAW;gBACnB,KAAK,EAAEV,MAAM,CAACF;cAAM;gBAAA;gBAAA;gBAAA;cAAA,QACpB,EACDG,MAAM,CAACH,KAAK,IAAIU,OAAO,CAACV,KAAK,eAC9B,QAAC,IAAI,CAAC,IAAI;gBAAC,SAAS,EAAC,YAAY;gBAAA,UAAC;cAElC;gBAAA;gBAAA;gBAAA;cAAA,QAAY;YAAA;cAAA;cAAA;cAAA;YAAA,QACD,eAEb,QAAC,IAAI,CAAC,KAAK;cAAC,SAAS,EAAC,MAAM;cAAC,SAAS,EAAC,mBAAmB;cAAA,wBACxD,QAAC,IAAI,CAAC,KAAK;gBAAA,UAAC;cAAQ;gBAAA;gBAAA;gBAAA;cAAA,QAAa,eACjC,QAAC,IAAI,CAAC,OAAO;gBACX,IAAI,EAAC,UAAU;gBACf,WAAW,EAAC,UAAU;gBACtB,IAAI,EAAC,UAAU;gBACf,QAAQ,EAAEW,YAAa;gBACvB,MAAM,EAAEC,UAAW;gBACnB,KAAK,EAAEV,MAAM,CAACD;cAAS;gBAAA;gBAAA;gBAAA;cAAA,QACvB,EACDE,MAAM,CAACF,QAAQ,IAAIS,OAAO,CAACT,QAAQ,IAAIE,MAAM,CAACF,QAAQ;YAAA;cAAA;cAAA;cAAA;YAAA,QAC5C,eACb,QAAC,IAAI,CAAC,KAAK;cAAC,SAAS,EAAC,MAAM;cAAC,SAAS,EAAC,mBAAmB;cAAA,uBACxD,QAAC,IAAI,CAAC,KAAK;gBAAC,IAAI,EAAC,UAAU;gBAAC,KAAK,EAAC;cAAU;gBAAA;gBAAA;gBAAA;cAAA;YAAG;cAAA;cAAA;cAAA;YAAA,QACpC,eACb,QAAC,MAAM;cAAC,OAAO,EAAC,SAAS;cAAC,IAAI,EAAC,QAAQ;cAAC,QAAQ,EAAEa,YAAa;cAAA,UAAC;YAEhE;cAAA;cAAA;cAAA;YAAA,QAAS;UAAA;YAAA;YAAA;YAAA;UAAA,QACJ;QAAA;UAAA;UAAA;UAAA;QAAA,QACG;MAAA;IACb;MAAA;MAAA;MAAA;IAAA,QACM,eACT;MAAA;MAAA;MAAA;IAAA,QAAW;EAAA,gBAEV;AAEP,CAAC;AAAC,KAlFIf,SAAS;AAoFf,eAAeA,SAAS;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}