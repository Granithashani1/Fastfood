{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Msi\\\\praktika1\\\\src\\\\components\\\\fastfild.js\";\nimport React from 'react';\nimport { Formik } from 'formik';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Basic = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"Anywhere in your app!\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: {\n      email: '',\n      password: ''\n    },\n    validate: values => {\n      const errors = {};\n      if (!values.email) {\n        errors.email = 'Required';\n      } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\n        errors.email = 'Invalid email address';\n      }\n      return errors;\n    },\n    onSubmit: (values, _ref) => {\n      let {\n        setSubmitting\n      } = _ref;\n      setTimeout(() => {\n        alert(JSON.stringify(values, null, 2));\n        setSubmitting(false);\n      }, 400);\n    },\n    children: _ref2 => {\n      let {\n        values,\n        errors,\n        touched,\n        handleChange,\n        handleBlur,\n        handleSubmit,\n        isSubmitting\n        /* and other goodies */\n      } = _ref2;\n      return /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          onChange: handleChange,\n          onBlur: handleBlur,\n          value: values.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), errors.email && touched.email && errors.email, /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"email\",\n          onChange: handleChange,\n          onBlur: handleBlur,\n          value: values.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), errors.email && touched.email && errors.email, /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          onChange: handleChange,\n          onBlur: handleBlur,\n          value: values.password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), errors.password && touched.password && errors.password, /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: isSubmitting,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 5,\n  columnNumber: 3\n}, this);\n_c = Basic;\nexport default Basic;\nvar _c;\n$RefreshReg$(_c, \"Basic\");","map":{"version":3,"names":["React","Formik","Basic","email","password","values","errors","test","setSubmitting","setTimeout","alert","JSON","stringify","touched","handleChange","handleBlur","handleSubmit","isSubmitting"],"sources":["C:/Users/Msi/praktika1/src/components/fastfild.js"],"sourcesContent":["import React from 'react';\r\nimport { Formik } from 'formik';\r\n\r\nconst Basic = () => (\r\n  <div>\r\n    <h1>Anywhere in your app!</h1>\r\n    <Formik\r\n      initialValues={{ email: '', password: '' }}\r\n      validate={values => {\r\n        const errors = {};\r\n        if (!values.email) {\r\n          errors.email = 'Required';\r\n        } else if (\r\n          !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\r\n        ) {\r\n          errors.email = 'Invalid email address';\r\n        }\r\n        return errors;\r\n      }}\r\n      onSubmit={(values, { setSubmitting }) => {\r\n        setTimeout(() => {\r\n          alert(JSON.stringify(values, null, 2));\r\n          setSubmitting(false);\r\n        }, 400);\r\n      }}\r\n    >\r\n      {({\r\n        values,\r\n        errors,\r\n        touched,\r\n        handleChange,\r\n        handleBlur,\r\n        handleSubmit,\r\n        isSubmitting,\r\n        /* and other goodies */\r\n      }) => (\r\n        <form onSubmit={handleSubmit}>\r\n          <input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            onChange={handleChange}\r\n            onBlur={handleBlur}\r\n            value={values.email}\r\n          />\r\n          {errors.email && touched.email && errors.email}\r\n\r\n          <input\r\n            type=\"text\"\r\n            name=\"email\"\r\n            onChange={handleChange}\r\n            onBlur={handleBlur}\r\n            value={values.email}\r\n          />\r\n          {errors.email && touched.email && errors.email}\r\n          \r\n\r\n\r\n\r\n\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            onChange={handleChange}\r\n            onBlur={handleBlur}\r\n            value={values.password}\r\n          />\r\n          {errors.password && touched.password && errors.password}\r\n          <button type=\"submit\" disabled={isSubmitting}>\r\n            Submit\r\n          </button>\r\n        </form>\r\n      )}\r\n    </Formik>\r\n  </div>\r\n);\r\n\r\nexport default Basic;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,QAAQ,QAAQ;AAAC;AAEhC,MAAMC,KAAK,GAAG,mBACZ;EAAA,wBACE;IAAA,UAAI;EAAqB;IAAA;IAAA;IAAA;EAAA,QAAK,eAC9B,QAAC,MAAM;IACL,aAAa,EAAE;MAAEC,KAAK,EAAE,EAAE;MAAEC,QAAQ,EAAE;IAAG,CAAE;IAC3C,QAAQ,EAAEC,MAAM,IAAI;MAClB,MAAMC,MAAM,GAAG,CAAC,CAAC;MACjB,IAAI,CAACD,MAAM,CAACF,KAAK,EAAE;QACjBG,MAAM,CAACH,KAAK,GAAG,UAAU;MAC3B,CAAC,MAAM,IACL,CAAC,0CAA0C,CAACI,IAAI,CAACF,MAAM,CAACF,KAAK,CAAC,EAC9D;QACAG,MAAM,CAACH,KAAK,GAAG,uBAAuB;MACxC;MACA,OAAOG,MAAM;IACf,CAAE;IACF,QAAQ,EAAE,CAACD,MAAM,WAAwB;MAAA,IAAtB;QAAEG;MAAc,CAAC;MAClCC,UAAU,CAAC,MAAM;QACfC,KAAK,CAACC,IAAI,CAACC,SAAS,CAACP,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;QACtCG,aAAa,CAAC,KAAK,CAAC;MACtB,CAAC,EAAE,GAAG,CAAC;IACT,CAAE;IAAA,UAED;MAAA,IAAC;QACAH,MAAM;QACNC,MAAM;QACNO,OAAO;QACPC,YAAY;QACZC,UAAU;QACVC,YAAY;QACZC;QACA;MACF,CAAC;MAAA,oBACC;QAAM,QAAQ,EAAED,YAAa;QAAA,wBAC3B;UACE,IAAI,EAAC,OAAO;UACZ,IAAI,EAAC,OAAO;UACZ,QAAQ,EAAEF,YAAa;UACvB,MAAM,EAAEC,UAAW;UACnB,KAAK,EAAEV,MAAM,CAACF;QAAM;UAAA;UAAA;UAAA;QAAA,QACpB,EACDG,MAAM,CAACH,KAAK,IAAIU,OAAO,CAACV,KAAK,IAAIG,MAAM,CAACH,KAAK,eAE9C;UACE,IAAI,EAAC,MAAM;UACX,IAAI,EAAC,OAAO;UACZ,QAAQ,EAAEW,YAAa;UACvB,MAAM,EAAEC,UAAW;UACnB,KAAK,EAAEV,MAAM,CAACF;QAAM;UAAA;UAAA;UAAA;QAAA,QACpB,EACDG,MAAM,CAACH,KAAK,IAAIU,OAAO,CAACV,KAAK,IAAIG,MAAM,CAACH,KAAK,eAM9C;UACE,IAAI,EAAC,UAAU;UACf,IAAI,EAAC,UAAU;UACf,QAAQ,EAAEW,YAAa;UACvB,MAAM,EAAEC,UAAW;UACnB,KAAK,EAAEV,MAAM,CAACD;QAAS;UAAA;UAAA;UAAA;QAAA,QACvB,EACDE,MAAM,CAACF,QAAQ,IAAIS,OAAO,CAACT,QAAQ,IAAIE,MAAM,CAACF,QAAQ,eACvD;UAAQ,IAAI,EAAC,QAAQ;UAAC,QAAQ,EAAEa,YAAa;UAAA,UAAC;QAE9C;UAAA;UAAA;UAAA;QAAA,QAAS;MAAA;QAAA;QAAA;QAAA;MAAA,QACJ;IAAA;EACR;IAAA;IAAA;IAAA;EAAA,QACM;AAAA;EAAA;EAAA;EAAA;AAAA,QAEZ;AAAC,KAvEIf,KAAK;AAyEX,eAAeA,KAAK;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}